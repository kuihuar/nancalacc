// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	App           *App                   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	Auth          *Auth                  `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Logging       *Logging               `protobuf:"bytes,5,opt,name=logging,proto3" json:"logging,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Bootstrap) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Bootstrap) GetLogging() *Logging {
	if x != nil {
		return x.Logging
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	DatabaseSync  *Data_DatabaseSync     `protobuf:"bytes,2,opt,name=database_sync,json=databaseSync,proto3" json:"database_sync,omitempty"`
	Redis         *Data_Redis            `protobuf:"bytes,3,opt,name=redis,proto3" json:"redis,omitempty"`
	Etcd          *Data_Etcd             `protobuf:"bytes,4,opt,name=etcd,proto3" json:"etcd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetDatabaseSync() *Data_DatabaseSync {
	if x != nil {
		return x.DatabaseSync
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetEtcd() *Data_Etcd {
	if x != nil {
		return x.Etcd
	}
	return nil
}

type App struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version        string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Env            string                 `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	LogLevel       string                 `protobuf:"bytes,5,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogOut         string                 `protobuf:"bytes,6,opt,name=log_out,json=logOut,proto3" json:"log_out,omitempty"`
	AppPackage     string                 `protobuf:"bytes,7,opt,name=app_package,json=appPackage,proto3" json:"app_package,omitempty"`
	AppId          string                 `protobuf:"bytes,8,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret      string                 `protobuf:"bytes,9,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	ThirdCompanyId string                 `protobuf:"bytes,10,opt,name=third_company_id,json=thirdCompanyId,proto3" json:"third_company_id,omitempty"`
	PlatformIds    string                 `protobuf:"bytes,11,opt,name=platform_ids,json=platformIds,proto3" json:"platform_ids,omitempty"`
	CompanyId      string                 `protobuf:"bytes,12,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	AccessKey      string                 `protobuf:"bytes,13,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey      string                 `protobuf:"bytes,14,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *App) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *App) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *App) GetLogOut() string {
	if x != nil {
		return x.LogOut
	}
	return ""
}

func (x *App) GetAppPackage() string {
	if x != nil {
		return x.AppPackage
	}
	return ""
}

func (x *App) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *App) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *App) GetThirdCompanyId() string {
	if x != nil {
		return x.ThirdCompanyId
	}
	return ""
}

func (x *App) GetPlatformIds() string {
	if x != nil {
		return x.PlatformIds
	}
	return ""
}

func (x *App) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *App) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *App) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type Logging struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Output        string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	FilePath      string                 `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	MaxSize       int32                  `protobuf:"varint,5,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	MaxBackups    int32                  `protobuf:"varint,6,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty"`
	MaxAge        int32                  `protobuf:"varint,7,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Compress      bool                   `protobuf:"varint,8,opt,name=compress,proto3" json:"compress,omitempty"`
	Caller        bool                   `protobuf:"varint,9,opt,name=caller,proto3" json:"caller,omitempty"`
	Stacktrace    bool                   `protobuf:"varint,10,opt,name=stacktrace,proto3" json:"stacktrace,omitempty"`
	Gorm          *GormLog               `protobuf:"bytes,11,opt,name=gorm,proto3" json:"gorm,omitempty"`
	Loki          *Loki                  `protobuf:"bytes,12,opt,name=loki,proto3" json:"loki,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logging) Reset() {
	*x = Logging{}
	mi := &file_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logging) ProtoMessage() {}

func (x *Logging) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logging.ProtoReflect.Descriptor instead.
func (*Logging) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Logging) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logging) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Logging) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Logging) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Logging) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Logging) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Logging) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Logging) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *Logging) GetCaller() bool {
	if x != nil {
		return x.Caller
	}
	return false
}

func (x *Logging) GetStacktrace() bool {
	if x != nil {
		return x.Stacktrace
	}
	return false
}

func (x *Logging) GetGorm() *GormLog {
	if x != nil {
		return x.Gorm
	}
	return nil
}

func (x *Logging) GetLoki() *Loki {
	if x != nil {
		return x.Loki
	}
	return nil
}

type GormLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlowThreshold string                 `protobuf:"bytes,1,opt,name=slow_threshold,json=slowThreshold,proto3" json:"slow_threshold,omitempty"`
	LogLevel      string                 `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GormLog) Reset() {
	*x = GormLog{}
	mi := &file_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GormLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormLog) ProtoMessage() {}

func (x *GormLog) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormLog.ProtoReflect.Descriptor instead.
func (*GormLog) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *GormLog) GetSlowThreshold() string {
	if x != nil {
		return x.SlowThreshold
	}
	return ""
}

func (x *GormLog) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

type Loki struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Enable        bool                   `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`
	BatchSize     int32                  `protobuf:"varint,7,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BatchWait     string                 `protobuf:"bytes,8,opt,name=batch_wait,json=batchWait,proto3" json:"batch_wait,omitempty"`
	Timeout       string                 `protobuf:"bytes,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Loki) Reset() {
	*x = Loki{}
	mi := &file_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Loki) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loki) ProtoMessage() {}

func (x *Loki) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loki.ProtoReflect.Descriptor instead.
func (*Loki) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Loki) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Loki) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Loki) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Loki) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Loki) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Loki) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Loki) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *Loki) GetBatchWait() string {
	if x != nil {
		return x.BatchWait
	}
	return ""
}

func (x *Loki) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wpsapp        *Auth_Wpsapp           `protobuf:"bytes,1,opt,name=wpsapp,proto3" json:"wpsapp,omitempty"`
	Dingtalk      *Auth_Dingtalk         `protobuf:"bytes,2,opt,name=dingtalk,proto3" json:"dingtalk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *Auth) GetWpsapp() *Auth_Wpsapp {
	if x != nil {
		return x.Wpsapp
	}
	return nil
}

func (x *Auth) GetDingtalk() *Auth_Dingtalk {
	if x != nil {
		return x.Dingtalk
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Driver          string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source          string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	MaxOpenConns    int32                  `protobuf:"varint,3,opt,name=max_open_conns,json=maxOpenConns,proto3" json:"max_open_conns,omitempty"`
	MaxIdleConns    int32                  `protobuf:"varint,4,opt,name=max_idle_conns,json=maxIdleConns,proto3" json:"max_idle_conns,omitempty"`
	ConnMaxLifetime string                 `protobuf:"bytes,5,opt,name=conn_max_lifetime,json=connMaxLifetime,proto3" json:"conn_max_lifetime,omitempty"`
	Tag             string                 `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	SourceKey       string                 `protobuf:"bytes,7,opt,name=source_key,json=sourceKey,proto3" json:"source_key,omitempty"`
	Env             string                 `protobuf:"bytes,8,opt,name=env,proto3" json:"env,omitempty"`
	Enable          bool                   `protobuf:"varint,9,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Data_Database) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *Data_Database) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Data_Database) GetConnMaxLifetime() string {
	if x != nil {
		return x.ConnMaxLifetime
	}
	return ""
}

func (x *Data_Database) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Data_Database) GetSourceKey() string {
	if x != nil {
		return x.SourceKey
	}
	return ""
}

func (x *Data_Database) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Data_Database) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type Data_DatabaseSync struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Driver          string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source          string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	MaxOpenConns    int32                  `protobuf:"varint,3,opt,name=max_open_conns,json=maxOpenConns,proto3" json:"max_open_conns,omitempty"`
	MaxIdleConns    int32                  `protobuf:"varint,4,opt,name=max_idle_conns,json=maxIdleConns,proto3" json:"max_idle_conns,omitempty"`
	ConnMaxLifetime string                 `protobuf:"bytes,5,opt,name=conn_max_lifetime,json=connMaxLifetime,proto3" json:"conn_max_lifetime,omitempty"`
	Tag             string                 `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	SourceKey       string                 `protobuf:"bytes,7,opt,name=source_key,json=sourceKey,proto3" json:"source_key,omitempty"`
	Env             string                 `protobuf:"bytes,8,opt,name=env,proto3" json:"env,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Data_DatabaseSync) Reset() {
	*x = Data_DatabaseSync{}
	mi := &file_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_DatabaseSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_DatabaseSync) ProtoMessage() {}

func (x *Data_DatabaseSync) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_DatabaseSync.ProtoReflect.Descriptor instead.
func (*Data_DatabaseSync) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Data_DatabaseSync) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_DatabaseSync) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Data_DatabaseSync) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *Data_DatabaseSync) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Data_DatabaseSync) GetConnMaxLifetime() string {
	if x != nil {
		return x.ConnMaxLifetime
	}
	return ""
}

func (x *Data_DatabaseSync) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Data_DatabaseSync) GetSourceKey() string {
	if x != nil {
		return x.SourceKey
	}
	return ""
}

func (x *Data_DatabaseSync) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`
	Enable        bool                   `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
	ReadTimeout   *durationpb.Duration   `protobuf:"bytes,6,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  *durationpb.Duration   `protobuf:"bytes,7,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

type Data_Etcd struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Endpoints         []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	DialTimeout       string                 `protobuf:"bytes,2,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	ConfigPrefix      string                 `protobuf:"bytes,3,opt,name=config_prefix,json=configPrefix,proto3" json:"config_prefix,omitempty"`
	EnableConfigWatch bool                   `protobuf:"varint,4,opt,name=enable_config_watch,json=enableConfigWatch,proto3" json:"enable_config_watch,omitempty"`
	Enable            bool                   `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Data_Etcd) Reset() {
	*x = Data_Etcd{}
	mi := &file_conf_conf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Etcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Etcd) ProtoMessage() {}

func (x *Data_Etcd) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Etcd.ProtoReflect.Descriptor instead.
func (*Data_Etcd) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Data_Etcd) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Data_Etcd) GetDialTimeout() string {
	if x != nil {
		return x.DialTimeout
	}
	return ""
}

func (x *Data_Etcd) GetConfigPrefix() string {
	if x != nil {
		return x.ConfigPrefix
	}
	return ""
}

func (x *Data_Etcd) GetEnableConfigWatch() bool {
	if x != nil {
		return x.EnableConfigWatch
	}
	return false
}

func (x *Data_Etcd) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type Auth_Wpsapp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	AuthUrl       string                 `protobuf:"bytes,3,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	AuthPath      string                 `protobuf:"bytes,4,opt,name=auth_path,json=authPath,proto3" json:"auth_path,omitempty"`
	GrantType     string                 `protobuf:"bytes,5,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth_Wpsapp) Reset() {
	*x = Auth_Wpsapp{}
	mi := &file_conf_conf_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_Wpsapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_Wpsapp) ProtoMessage() {}

func (x *Auth_Wpsapp) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_Wpsapp.ProtoReflect.Descriptor instead.
func (*Auth_Wpsapp) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Auth_Wpsapp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Auth_Wpsapp) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *Auth_Wpsapp) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *Auth_Wpsapp) GetAuthPath() string {
	if x != nil {
		return x.AuthPath
	}
	return ""
}

func (x *Auth_Wpsapp) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

type Auth_Dingtalk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AppKey        string                 `protobuf:"bytes,2,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	AppSecret     string                 `protobuf:"bytes,3,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	Timeout       string                 `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MaxConcurrent int64                  `protobuf:"varint,5,opt,name=maxConcurrent,proto3" json:"maxConcurrent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth_Dingtalk) Reset() {
	*x = Auth_Dingtalk{}
	mi := &file_conf_conf_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth_Dingtalk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_Dingtalk) ProtoMessage() {}

func (x *Auth_Dingtalk) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_Dingtalk.ProtoReflect.Descriptor instead.
func (*Auth_Dingtalk) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Auth_Dingtalk) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Auth_Dingtalk) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *Auth_Dingtalk) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *Auth_Dingtalk) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *Auth_Dingtalk) GetMaxConcurrent() int64 {
	if x != nil {
		return x.MaxConcurrent
	}
	return 0
}

var File_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x0fconf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\xd5\x01\n" +
	"\tBootstrap\x12*\n" +
	"\x06server\x18\x01 \x01(\v2\x12.kratos.api.ServerR\x06server\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.kratos.api.DataR\x04data\x12!\n" +
	"\x03app\x18\x03 \x01(\v2\x0f.kratos.api.AppR\x03app\x12$\n" +
	"\x04auth\x18\x04 \x01(\v2\x10.kratos.api.AuthR\x04auth\x12-\n" +
	"\alogging\x18\x05 \x01(\v2\x13.kratos.api.LoggingR\alogging\"\xb8\x02\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x1ai\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1ai\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\x97\t\n" +
	"\x04Data\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.kratos.api.Data.DatabaseR\bdatabase\x12B\n" +
	"\rdatabase_sync\x18\x02 \x01(\v2\x1d.kratos.api.Data.DatabaseSyncR\fdatabaseSync\x12,\n" +
	"\x05redis\x18\x03 \x01(\v2\x16.kratos.api.Data.RedisR\x05redis\x12)\n" +
	"\x04etcd\x18\x04 \x01(\v2\x15.kratos.api.Data.EtcdR\x04etcd\x1a\x8d\x02\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12$\n" +
	"\x0emax_open_conns\x18\x03 \x01(\x05R\fmaxOpenConns\x12$\n" +
	"\x0emax_idle_conns\x18\x04 \x01(\x05R\fmaxIdleConns\x12*\n" +
	"\x11conn_max_lifetime\x18\x05 \x01(\tR\x0fconnMaxLifetime\x12\x10\n" +
	"\x03tag\x18\x06 \x01(\tR\x03tag\x12\x1d\n" +
	"\n" +
	"source_key\x18\a \x01(\tR\tsourceKey\x12\x10\n" +
	"\x03env\x18\b \x01(\tR\x03env\x12\x16\n" +
	"\x06enable\x18\t \x01(\bR\x06enable\x1a\xf9\x01\n" +
	"\fDatabaseSync\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12$\n" +
	"\x0emax_open_conns\x18\x03 \x01(\x05R\fmaxOpenConns\x12$\n" +
	"\x0emax_idle_conns\x18\x04 \x01(\x05R\fmaxIdleConns\x12*\n" +
	"\x11conn_max_lifetime\x18\x05 \x01(\tR\x0fconnMaxLifetime\x12\x10\n" +
	"\x03tag\x18\x06 \x01(\tR\x03tag\x12\x1d\n" +
	"\n" +
	"source_key\x18\a \x01(\tR\tsourceKey\x12\x10\n" +
	"\x03env\x18\b \x01(\tR\x03env\x1a\xf7\x01\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x12\x16\n" +
	"\x06enable\x18\x05 \x01(\bR\x06enable\x12<\n" +
	"\fread_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\x1a\xb4\x01\n" +
	"\x04Etcd\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12!\n" +
	"\fdial_timeout\x18\x02 \x01(\tR\vdialTimeout\x12#\n" +
	"\rconfig_prefix\x18\x03 \x01(\tR\fconfigPrefix\x12.\n" +
	"\x13enable_config_watch\x18\x04 \x01(\bR\x11enableConfigWatch\x12\x16\n" +
	"\x06enable\x18\x05 \x01(\bR\x06enable\"\x8c\x03\n" +
	"\x03App\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x10\n" +
	"\x03env\x18\x04 \x01(\tR\x03env\x12\x1b\n" +
	"\tlog_level\x18\x05 \x01(\tR\blogLevel\x12\x17\n" +
	"\alog_out\x18\x06 \x01(\tR\x06logOut\x12\x1f\n" +
	"\vapp_package\x18\a \x01(\tR\n" +
	"appPackage\x12\x15\n" +
	"\x06app_id\x18\b \x01(\tR\x05appId\x12\x1d\n" +
	"\n" +
	"app_secret\x18\t \x01(\tR\tappSecret\x12(\n" +
	"\x10third_company_id\x18\n" +
	" \x01(\tR\x0ethirdCompanyId\x12!\n" +
	"\fplatform_ids\x18\v \x01(\tR\vplatformIds\x12\x1d\n" +
	"\n" +
	"company_id\x18\f \x01(\tR\tcompanyId\x12\x1d\n" +
	"\n" +
	"access_key\x18\r \x01(\tR\taccessKey\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x0e \x01(\tR\tsecretKey\"\xe4\x02\n" +
	"\aLogging\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\x12\x1b\n" +
	"\tfile_path\x18\x04 \x01(\tR\bfilePath\x12\x19\n" +
	"\bmax_size\x18\x05 \x01(\x05R\amaxSize\x12\x1f\n" +
	"\vmax_backups\x18\x06 \x01(\x05R\n" +
	"maxBackups\x12\x17\n" +
	"\amax_age\x18\a \x01(\x05R\x06maxAge\x12\x1a\n" +
	"\bcompress\x18\b \x01(\bR\bcompress\x12\x16\n" +
	"\x06caller\x18\t \x01(\bR\x06caller\x12\x1e\n" +
	"\n" +
	"stacktrace\x18\n" +
	" \x01(\bR\n" +
	"stacktrace\x12'\n" +
	"\x04gorm\x18\v \x01(\v2\x13.kratos.api.GormLogR\x04gorm\x12$\n" +
	"\x04loki\x18\f \x01(\v2\x10.kratos.api.LokiR\x04loki\"M\n" +
	"\aGormLog\x12%\n" +
	"\x0eslow_threshold\x18\x01 \x01(\tR\rslowThreshold\x12\x1b\n" +
	"\tlog_level\x18\x02 \x01(\tR\blogLevel\"\xce\x02\n" +
	"\x04Loki\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\tR\btenantId\x124\n" +
	"\x06labels\x18\x05 \x03(\v2\x1c.kratos.api.Loki.LabelsEntryR\x06labels\x12\x16\n" +
	"\x06enable\x18\x06 \x01(\bR\x06enable\x12\x1d\n" +
	"\n" +
	"batch_size\x18\a \x01(\x05R\tbatchSize\x12\x1d\n" +
	"\n" +
	"batch_wait\x18\b \x01(\tR\tbatchWait\x12\x18\n" +
	"\atimeout\x18\t \x01(\tR\atimeout\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x03\n" +
	"\x04Auth\x12/\n" +
	"\x06wpsapp\x18\x01 \x01(\v2\x17.kratos.api.Auth.WpsappR\x06wpsapp\x125\n" +
	"\bdingtalk\x18\x02 \x01(\v2\x19.kratos.api.Auth.DingtalkR\bdingtalk\x1a\xa1\x01\n" +
	"\x06Wpsapp\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x02 \x01(\tR\fclientSecret\x12\x19\n" +
	"\bauth_url\x18\x03 \x01(\tR\aauthUrl\x12\x1b\n" +
	"\tauth_path\x18\x04 \x01(\tR\bauthPath\x12\x1d\n" +
	"\n" +
	"grant_type\x18\x05 \x01(\tR\tgrantType\x1a\x9e\x01\n" +
	"\bDingtalk\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x17\n" +
	"\aapp_key\x18\x02 \x01(\tR\x06appKey\x12\x1d\n" +
	"\n" +
	"app_secret\x18\x03 \x01(\tR\tappSecret\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\tR\atimeout\x12$\n" +
	"\rmaxConcurrent\x18\x05 \x01(\x03R\rmaxConcurrentB\x1eZ\x1cnancalacc/internal/conf;confb\x06proto3"

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),           // 0: kratos.api.Bootstrap
	(*Server)(nil),              // 1: kratos.api.Server
	(*Data)(nil),                // 2: kratos.api.Data
	(*App)(nil),                 // 3: kratos.api.App
	(*Logging)(nil),             // 4: kratos.api.Logging
	(*GormLog)(nil),             // 5: kratos.api.GormLog
	(*Loki)(nil),                // 6: kratos.api.Loki
	(*Auth)(nil),                // 7: kratos.api.Auth
	(*Server_HTTP)(nil),         // 8: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 9: kratos.api.Server.GRPC
	(*Data_Database)(nil),       // 10: kratos.api.Data.Database
	(*Data_DatabaseSync)(nil),   // 11: kratos.api.Data.DatabaseSync
	(*Data_Redis)(nil),          // 12: kratos.api.Data.Redis
	(*Data_Etcd)(nil),           // 13: kratos.api.Data.Etcd
	nil,                         // 14: kratos.api.Loki.LabelsEntry
	(*Auth_Wpsapp)(nil),         // 15: kratos.api.Auth.Wpsapp
	(*Auth_Dingtalk)(nil),       // 16: kratos.api.Auth.Dingtalk
	(*durationpb.Duration)(nil), // 17: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	2,  // 1: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	3,  // 2: kratos.api.Bootstrap.app:type_name -> kratos.api.App
	7,  // 3: kratos.api.Bootstrap.auth:type_name -> kratos.api.Auth
	4,  // 4: kratos.api.Bootstrap.logging:type_name -> kratos.api.Logging
	8,  // 5: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	9,  // 6: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	10, // 7: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	11, // 8: kratos.api.Data.database_sync:type_name -> kratos.api.Data.DatabaseSync
	12, // 9: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	13, // 10: kratos.api.Data.etcd:type_name -> kratos.api.Data.Etcd
	5,  // 11: kratos.api.Logging.gorm:type_name -> kratos.api.GormLog
	6,  // 12: kratos.api.Logging.loki:type_name -> kratos.api.Loki
	14, // 13: kratos.api.Loki.labels:type_name -> kratos.api.Loki.LabelsEntry
	15, // 14: kratos.api.Auth.wpsapp:type_name -> kratos.api.Auth.Wpsapp
	16, // 15: kratos.api.Auth.dingtalk:type_name -> kratos.api.Auth.Dingtalk
	17, // 16: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	17, // 17: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	17, // 18: kratos.api.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	17, // 19: kratos.api.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
