syntax = "proto3";
package kratos.api;

option go_package = "nancalacc/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  App app = 3;
  Auth auth = 4;
  Logging logging = 5;
  Tracing tracing = 6;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}


message Data {
  message Database {
    string driver = 1;
    string source = 2;
    int32 max_open_conns = 3;
    int32 max_idle_conns = 4;
    string conn_max_lifetime = 5;
    string tag = 6;
    string source_key = 7;
    string env = 8;
    bool enable = 9;
  }
  message DatabaseSync {
    string driver = 1;
    string source = 2;
    int32 max_open_conns = 3;
    int32 max_idle_conns = 4;
    string conn_max_lifetime = 5;
    string tag = 6;
    string source_key = 7;
    string env = 8;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    string password = 3;
    int32 db = 4;
    bool enable = 5;
    google.protobuf.Duration read_timeout = 6;
    google.protobuf.Duration write_timeout = 7;
  }
  message Etcd {
    repeated string endpoints = 1;
    string dial_timeout = 2;
    string config_prefix = 3;
    bool enable_config_watch = 4;
    bool enable = 5;
  }
  Database database = 1;
  DatabaseSync database_sync = 2;
  Redis redis = 3;
  Etcd etcd = 4;
}
message App {
  string id = 1;
  string name = 2;
  string version = 3;
  string env = 4;
  string log_level =5;
  string log_out = 6;
  string app_package = 7;
  string app_id = 8;
  string app_secret = 9;
  string third_company_id = 10;
  string platform_ids = 11;
  string company_id = 12;
  string access_key = 13;
  string secret_key = 14;
}

message Logging {
  string level = 1;
  string format = 2;
  string output = 3;
  string file_path = 4;
  int32 max_size = 5;
  int32 max_backups = 6;
  int32 max_age = 7;
  bool compress = 8;
  bool caller = 9;
  bool stacktrace = 10;
  GormLog gorm = 11;
  Loki loki = 12;
  // 追踪日志配置
  bool verbose_tracing = 13; // 是否启用详细追踪日志
}

message GormLog {
  string slow_threshold = 1;
  string log_level = 2;
}

message Loki {
  string url = 1;
  string username = 2;
  string password = 3;
  string tenant_id = 4;
  map<string, string> labels = 5;
  bool enable = 6;
  int32 batch_size = 7;
  string batch_wait = 8;
  string timeout = 9;
}

message Auth {
  message Wpsapp {
    string client_id = 1;
    string client_secret = 2;
    string auth_url = 3;
    string auth_path = 4;
    string grant_type = 5;
  }

  message Dingtalk {
    string endpoint = 1;
    string app_key = 2;
    string app_secret = 3;
    string timeout = 4;
    int64 maxConcurrent = 5;
  }
  Wpsapp wpsapp = 1;
  Dingtalk dingtalk= 2;
}

message Tracing {
  bool enable = 1; // 是否启用追踪
  bool verbose_logging = 2; // 是否启用详细日志
  bool log_request_size = 3; // 是否记录请求体大小
  bool log_response_size = 4; // 是否记录响应体大小
  bool log_headers = 5; // 是否记录请求头
  bool log_query_params = 6; // 是否记录查询参数
  string service_name = 7; // 服务名称
  string environment = 8; // 环境
}
